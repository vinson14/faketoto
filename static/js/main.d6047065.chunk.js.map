{"version":3,"sources":["pages/About.js","static/img/toto.png","utils/numberWithCommas.js","components/NextDraw.js","components/TableHeader.js","components/WinningNumbers.js","components/WinningShares.js","components/AdditionalNumber.js","components/GroupOnePrize.js","components/Button.js","components/ReturnHome.js","components/Emulation.js","components/SelectNumbers.js","components/StartEmulation.js","components/SetGroupOnePrize.js","components/Input.js","components/Intro.js","components/Container.js","components/Layout.js","pages/Home.js","App.js","reportWebVitals.js","index.js"],"names":["About","numberWithCommas","x","toString","replace","NextDraw","props","groupOnePrize","datetime","Date","now","className","src","totoLogo","alt","toDateString","TableHeader","WinningNumbers","winningNumbers","map","number","WinningShares","winningShares","group","shareAmount","shares","colSpan","share","AdditionalNumber","additionalNumber","GroupOnePrize","Button","children","onClick","ReturnHome","setStartEmulation","Emulation","SelectNumbers","title","numbers","setNumbers","maxSelection","allNumbers","i","push","selected","includes","e","numbersCopy","length","splice","currentTarget","classList","toggle","alert","selectNumber","StartEmulation","startEmulation","SetGroupOnePrize","setGroupOnePrize","type","aria-label","value","onChange","event","target","Input","setWinningNumbers","setAdditionalNumber","Intro","Container","Layout","child","Home","useState","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","appear","enter","exit","classNames","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d6047065.chunk.js","sourcesContent":["import React from \"react\";\n\nconst About = () => {\n    return <h1>About Page</h1>;\n};\n\nexport default About;\n","export default __webpack_public_path__ + \"static/media/toto.1a58eb76.png\";","export default function numberWithCommas(x) {\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}\n","import React from \"react\";\nimport totoLogo from \"../static/img/toto.png\";\nimport numberWithCommas from \"../utils/numberWithCommas\";\n\nconst NextDraw = (props) => {\n    const { groupOnePrize } = props;\n\n    const datetime = new Date(Date.now());\n\n    return (\n        <div className=\"col-12 col-md-6\">\n            <div className=\"row\">\n                <div className=\"col-3 d-flex justify-content-center align-items-center\">\n                    <img src={totoLogo} alt=\"Toto Logo\" className=\"img-fluid\" />\n                </div>\n                <div className=\"col-9\">\n                    <div className=\"row align-items-center h-100\">\n                        <div className=\"col-5 d-flex flex-column justify-content-center py-3\">\n                            <p className=\"my-0\">Next Jackpot</p>\n                            <p className=\"my-0\">Next Draw</p>\n                        </div>\n                        <div className=\"col-7 d-flex flex-column justify-content-center py-3\">\n                            <p className=\"my-0\">\n                                ${numberWithCommas(groupOnePrize)} est\n                            </p>\n                            <p className=\"my-0\"> {datetime.toDateString()}</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default NextDraw;\n","import React from \"react\";\n\nconst TableHeader = () => {\n    const datetime = new Date(Date.now());\n\n    return (\n        <div className=\"row\">\n            <div className=\"col-6 table-header border border-end border-white\">\n                <p className=\"text-center text-white my-0 py-2\">\n                    {datetime.toDateString()}\n                </p>\n            </div>\n            <div className=\"col-6 table-header border border-start border-white\">\n                <p className=\"text-center text-white my-0 py-2\">\n                    Draw No. 3888\n                </p>\n            </div>\n        </div>\n    );\n};\n\nexport default TableHeader;\n","import React from \"react\";\n\nconst WinningNumbers = (props) => {\n    const { winningNumbers } = props;\n    return (\n        <div className=\"row mt-3\">\n            <div className=\"col-12 grey-table\">\n                <p className=\"my-0 text-center p-2\">Winning Numbers</p>\n            </div>\n            {winningNumbers.map((number) => {\n                return (\n                    <div className=\"col-2 light-grey-table\" key={number}>\n                        <p className=\"text-center my-0 py-2\">{number}</p>\n                    </div>\n                );\n            })}\n        </div>\n    );\n};\n\nexport default WinningNumbers;\n","import React from \"react\";\nimport numberWithCommas from \"../utils/numberWithCommas\";\n\nconst WinningShares = (props) => {\n    const { groupOnePrize } = props;\n\n    const winningShares = [\n        {\n            group: 1,\n            shareAmount: groupOnePrize,\n            shares: 1,\n        },\n        {\n            group: 2,\n            shareAmount: 188888,\n            shares: 8,\n        },\n        {\n            group: 3,\n            shareAmount: 1388,\n            shares: 568,\n        },\n        {\n            group: 4,\n            shareAmount: 388,\n            shares: 1288,\n        },\n        {\n            group: 5,\n            shareAmount: 50,\n            shares: 30888,\n        },\n        {\n            group: 6,\n            shareAmount: 25,\n            shares: 33688,\n        },\n        {\n            group: 7,\n            shareAmount: 10,\n            shares: 588888,\n        },\n    ];\n\n    return (\n        <div className=\"row mt-3\">\n            <div className=\"col-12 p-0\">\n                <table className=\"table table-bordered text-center\">\n                    <thead className=\"grey-table\">\n                        <tr>\n                            <th colSpan={3}>Winning Shares</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <th>Prize Group</th>\n                            <th>Share Amount</th>\n                            <th>No. of Winning Shares</th>\n                        </tr>\n                        {winningShares.map((share) => {\n                            return (\n                                <tr key={share.group}>\n                                    <td>Group {share.group}</td>\n                                    <td>\n                                        ${numberWithCommas(share.shareAmount)}\n                                    </td>\n                                    <td>{numberWithCommas(share.shares)}</td>\n                                </tr>\n                            );\n                        })}\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    );\n};\n\nexport default WinningShares;\n","import React from \"react\";\n\nconst AdditionalNumber = (props) => {\n    const { additionalNumber } = props;\n    return (\n        <div className=\"row mt-3\">\n            <div className=\"col-12 grey-table\">\n                <p className=\"my-0 text-center p-2\">Additional Number</p>\n            </div>\n            <div className=\"col-12 light-grey-table\">\n                <p className=\"text-center my-0 py-2\">{additionalNumber}</p>\n            </div>\n        </div>\n    );\n};\n\nexport default AdditionalNumber;\n","import React from \"react\";\nimport numberWithCommas from \"../utils/numberWithCommas\";\n\nconst GroupOnePrize = (props) => {\n    const { groupOnePrize } = props;\n\n    return (\n        <div className=\"row mt-3\">\n            <div className=\"col-12 grey-table\">\n                <p className=\"my-0 text-center p-2\">Group 1 Prize</p>\n            </div>\n            <div className=\"col-12 light-grey-table\">\n                <p className=\"text-center my-0 py-2\">\n                    ${numberWithCommas(groupOnePrize)}\n                </p>\n            </div>\n        </div>\n    );\n};\n\nexport default GroupOnePrize;\n","import React from \"react\";\n\nconst Button = (props) => {\n    const { children, onClick } = props;\n\n    return (\n        <button className=\"btn btn-pri rounded-0\" onClick={onClick}>\n            {children}\n        </button>\n    );\n};\n\nexport default Button;\n","import React from \"react\";\nimport Button from \"./Button\";\n\nconst ReturnHome = (props) => {\n    const { setStartEmulation } = props;\n\n    return (\n        <div className=\"col-5 d-flex justify-content-center\">\n            <Button onClick={() => setStartEmulation(false)}>\n                Return Home\n            </Button>\n        </div>\n    );\n};\n\nexport default ReturnHome;\n","import React from \"react\";\nimport NextDraw from \"../components/NextDraw\";\nimport TableHeader from \"../components/TableHeader\";\nimport WinningNumbers from \"../components/WinningNumbers\";\nimport WinningShares from \"../components/WinningShares\";\nimport AdditionalNumber from \"../components/AdditionalNumber\";\nimport GroupOnePrize from \"../components/GroupOnePrize\";\nimport ReturnHome from \"./ReturnHome\";\n\nconst Emulation = (props) => {\n    const {\n        winningNumbers,\n        additionalNumber,\n        groupOnePrize,\n        setStartEmulation,\n    } = props;\n\n    return (\n        <div className=\"col-12\">\n            <div className=\"row justify-content-center\">\n                <NextDraw groupOnePrize={groupOnePrize} />\n\n                <div className=\"col-10 col-md-5 col-lg-4\">\n                    <TableHeader />\n                    <WinningNumbers winningNumbers={winningNumbers} />\n                    <AdditionalNumber additionalNumber={additionalNumber} />\n                    <GroupOnePrize groupOnePrize={groupOnePrize} />\n                    <WinningShares groupOnePrize={groupOnePrize} />\n                </div>\n                <ReturnHome setStartEmulation={setStartEmulation} />\n            </div>\n        </div>\n    );\n};\n\nexport default Emulation;\n","import React from \"react\";\n\nconst SelectNumbers = (props) => {\n    const { title, numbers, setNumbers, maxSelection } = props;\n\n    // Create numbers from 1 to 49 in an array\n    const allNumbers = [];\n    for (var i = 1; i < 50; i++) {\n        allNumbers.push(i);\n    }\n\n    const selectNumber = (number, e) => {\n        var numbersCopy = [...numbers];\n\n        // Checks if the number is already selected\n        for (var i = 0; i < numbersCopy.length; i++) {\n            // If the number is selected, this action unselects it\n            if (numbersCopy[i] === number) {\n                numbersCopy.splice(i, 1);\n                setNumbers(numbersCopy);\n\n                e.currentTarget.classList.toggle(\"selected\");\n                return;\n            }\n        }\n\n        // Checks if the maximum number of numbers have been selected already\n        if (numbers.length === maxSelection) {\n            alert(`You can only select ${maxSelection} ${title}`);\n            return;\n        }\n\n        // Otherwise select the number\n        e.currentTarget.classList.toggle(\"selected\");\n        setNumbers([...numbers, number]);\n    };\n\n    return (\n        <div className=\"row my-3\">\n            <div className=\"col-12\">\n                <h6>\n                    Select {maxSelection} {title}\n                </h6>\n            </div>\n\n            {allNumbers.map((number) => {\n                // Ensures that the selected numbers are highlighted to the user\n                const selected = numbers.includes(number);\n\n                return (\n                    <div\n                        className={`col-2 d-flex justify-content-center ${\n                            selected && \"selected\"\n                        }`}\n                        onClick={(e) => selectNumber(number, e)}\n                    >\n                        <button className=\"btn\">{number}</button>\n                    </div>\n                );\n            })}\n        </div>\n    );\n};\n\nexport default SelectNumbers;\n","import React from \"react\";\nimport Button from \"./Button\";\n\nconst StartEmulation = (props) => {\n    const {\n        startEmulation,\n        setStartEmulation,\n        winningNumbers,\n        additionalNumber,\n    } = props;\n\n    const handleStartEmulation = () => {\n        if (winningNumbers.length !== 6) {\n            alert(\"Please select 6 Winning Numbers\");\n        } else if (additionalNumber.length !== 1) {\n            alert(\"Please select 1 Additional Number\");\n        } else {\n            setStartEmulation(!startEmulation);\n        }\n    };\n\n    return <Button onClick={handleStartEmulation}>Start Emulation</Button>;\n};\n\nexport default StartEmulation;\n","import React from \"react\";\n\nconst SetGroupOnePrize = (props) => {\n    const { groupOnePrize, setGroupOnePrize } = props;\n\n    const handleInputChange = (event) => {\n        setGroupOnePrize(event.target.value);\n    };\n\n    return (\n        <div className=\"row my-3 justify-content-center\">\n            <div className=\"col-12\">\n                <h6>Enter the Group 1 jackpot for today</h6>\n            </div>\n            <div className=\"input-group mb-3\">\n                <span className=\"input-group-text rounded-0\">$</span>\n                <input\n                    type=\"text\"\n                    className=\"form-control rounded-0\"\n                    aria-label=\"Amount (to the nearest dollar)\"\n                    value={groupOnePrize}\n                    onChange={handleInputChange}\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default SetGroupOnePrize;\n","import React from \"react\";\nimport SelectNumbers from \"./SelectNumbers\";\nimport StartEmulation from \"./StartEmulation\";\nimport SetGroupOnePrize from \"./SetGroupOnePrize\";\n\nconst Input = (props) => {\n    const {\n        winningNumbers,\n        additionalNumber,\n        groupOnePrize,\n        setGroupOnePrize,\n        setWinningNumbers,\n        setAdditionalNumber,\n        startEmulation,\n        setStartEmulation,\n    } = props;\n\n    return (\n        <div className=\"col-10 col-md-5 col-lg-4 d-flex flex-column justify-content-center align-items-center\">\n            <SetGroupOnePrize\n                groupOnePrize={groupOnePrize}\n                setGroupOnePrize={setGroupOnePrize}\n            />\n            <SelectNumbers\n                title=\"Winning Numbers\"\n                numbers={winningNumbers}\n                setNumbers={setWinningNumbers}\n                maxSelection={6}\n            />\n            <SelectNumbers\n                title=\"Additional Number\"\n                numbers={additionalNumber}\n                setNumbers={setAdditionalNumber}\n                maxSelection={1}\n            />\n            <StartEmulation\n                winningNumbers={winningNumbers}\n                additionalNumber={additionalNumber}\n                startEmulation={startEmulation}\n                setStartEmulation={setStartEmulation}\n            />\n        </div>\n    );\n};\n\nexport default Input;\n","import React from \"react\";\n\nconst Intro = () => {\n    return (\n        <div className=\"col-10\">\n            <h1 className=\"display-2 text-center\">Fake Toto</h1>\n            <p className=\"text-center\">\n                This is a prank website to prank your family and friends\n                <br />\n                <br /> Select your winning numbers and select generate to watch\n                the website emulate a real toto draw\n                <br />\n                <br />\n                This website is in no way affiliated with Singapore Pools\n                Limited.\n            </p>\n        </div>\n    );\n};\n\nexport default Intro;\n","import React from \"react\";\n\nconst Container = ({ children }) => {\n    return <div className=\"container\">{children}</div>;\n};\n\nexport default Container;\n","import React from \"react\";\nimport Container from \"./Container\";\n\nconst Layout = ({ children }) => {\n    return (\n        <Container>\n            {children.map((child) => (\n                <div className=\"row justify-content-center my-3\">{child}</div>\n            ))}\n        </Container>\n    );\n};\n\nexport default Layout;\n","import React, { useState } from \"react\";\nimport { CSSTransition } from \"react-transition-group\";\nimport Emulation from \"../components/Emulation\";\nimport Input from \"../components/Input\";\nimport Intro from \"../components/Intro\";\nimport Layout from \"../components/Layout\";\n\nconst Home = () => {\n    const [winningNumbers, setWinningNumbers] = useState([]);\n    const [additionalNumber, setAdditionalNumber] = useState([]);\n    const [groupOnePrize, setGroupOnePrize] = useState(\"\");\n    const [startEmulation, setStartEmulation] = useState(false);\n\n    return (\n        <Layout>\n            <CSSTransition\n                in={!startEmulation}\n                mountOnEnter\n                unmountOnExit\n                timeout={{\n                    appear: 2000,\n                    enter: 2000,\n                    exit: 0,\n                }}\n                classNames=\"emulation\"\n            >\n                <Intro />\n            </CSSTransition>\n\n            <CSSTransition\n                in={!startEmulation}\n                mountOnEnter\n                unmountOnExit\n                timeout={{\n                    appear: 2000,\n                    enter: 2000,\n                    exit: 0,\n                }}\n                classNames=\"emulation\"\n            >\n                <Input\n                    winningNumbers={winningNumbers}\n                    additionalNumber={additionalNumber}\n                    groupOnePrize={groupOnePrize}\n                    setWinningNumbers={setWinningNumbers}\n                    setAdditionalNumber={setAdditionalNumber}\n                    startEmulation={startEmulation}\n                    setStartEmulation={setStartEmulation}\n                    setGroupOnePrize={setGroupOnePrize}\n                />\n            </CSSTransition>\n\n            <CSSTransition\n                in={startEmulation}\n                mountOnEnter\n                unmountOnExit\n                timeout={{\n                    appear: 2000,\n                    enter: 2000,\n                    exit: 0,\n                }}\n                classNames=\"emulation\"\n            >\n                <Emulation\n                    winningNumbers={winningNumbers}\n                    additionalNumber={additionalNumber}\n                    groupOnePrize={groupOnePrize}\n                    setStartEmulation={setStartEmulation}\n                />\n            </CSSTransition>\n        </Layout>\n    );\n};\n\nexport default Home;\n","import React from \"react\";\nimport { HashRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport About from \"./pages/About\";\nimport styles from \"./App.css\";\nimport Home from \"./pages/Home\";\n\nconst App = () => {\n    return (\n        <Router>\n            <Switch>\n                <Route exact path=\"/\">\n                    <Home />\n                </Route>\n                <Route exact path=\"/about\">\n                    <About />\n                </Route>\n            </Switch>\n        </Router>\n    );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}