{"version":3,"sources":["components/Button.js","components/Row.js","components/Intro.js","components/Layout.js","components/NextBack.js","components/SelectNumbers.js","components/SetJackpot.js","pages/Home.js","components/AdditionalNumber.js","utils/numberWithCommas.js","components/GroupOnePrize.js","static/img/toto.png","components/NextDraw.js","components/ReturnHome.js","components/TableHeader.js","components/WinningNumbers.js","components/WinningShares.js","pages/Simulation.js","App.js","reportWebVitals.js","index.js"],"names":["Button","props","children","onClick","className","Row","Intro","setShowSelectWinning","Layout","NextBack","showThis","showNext","showBack","validation","error","alert","SelectNumbers","winningNumbers","setWinningNumbers","additionalNumber","setAdditionalNumber","useState","winningNumbersComplete","setWinningNumbersComplete","allNumbers","i","push","useEffect","length","map","number","selected","includes","selectedAdditional","e","winningNumbersCopy","splice","currentTarget","classList","toggle","console","log","selectNumber","SetJackpot","jackpot","setJackpot","type","aria-label","value","onChange","event","target","test","Number","isInteger","parseInt","createQueryString","numbers","addNum","query","forEach","index","concat","Home","showIntro","setShowIntro","showSelectNumbers","setShowSelectNumbers","showSetJackpot","setShowSetJackpot","showSimulation","setShowSimulation","timeout","CSSTransition","in","appear","enter","exit","mountOnEnter","unmountOnExit","classNames","onEnter","title","maxSelection","to","pathname","search","AdditionalNumber","numberWithCommas","x","toString","replace","GroupOnePrize","NextDraw","datetime","Date","now","src","totoLogo","alt","toDateString","ReturnHome","TableHeader","display","setDisplay","interval","setInterval","randomNumber","setTimeout","clearInterval","clearTimeout","Math","floor","random","WinningNumbers","displayNumbers","setDisplayNumbers","currentIndex","setCurrentIndex","WinningShares","winningShares","group","shareAmount","shares","colSpan","share","Simulation","URLSearchParams","useLocation","get","ScrollToTop","window","scrollTo","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e6418645.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Button = (props) => {\n    const { children, onClick } = props;\n\n    return (\n        <button className=\"btn btn-pri rounded-0\" onClick={onClick}>\n            {children}\n        </button>\n    );\n};\n\nexport default Button;\n","import React from \"react\";\n\nconst Row = ({ children }) => {\n    return <div className=\"row my-3 justify-content-center\">{children}</div>;\n};\n\nexport default Row;\n","import React from \"react\";\nimport Button from \"./Button\";\nimport Row from \"./Row\";\n\nconst Intro = (props) => {\n    const { setShowSelectWinning } = props;\n\n    return (\n        <Row>\n            <div className=\"col-10\">\n                <h1 className=\"display-2 text-center\">Fake Toto</h1>\n                <p className=\"text-center\">\n                    This is a prank website to prank your family and friends\n                    <br />\n                    <br /> Select your winning numbers and select generate to\n                    watch the website simulate a real toto draw\n                    <br />\n                    <br />\n                    This website is in no way affiliated with Singapore Pools\n                    Limited.\n                </p>\n            </div>\n            <div className=\"col-3 d-flex justify-content-center\">\n                <Button onClick={() => setShowSelectWinning(true)}>\n                    Start\n                </Button>\n            </div>\n        </Row>\n    );\n};\n\nexport default Intro;\n","import React from \"react\";\n\nconst Layout = ({ children }) => {\n    return (\n        <div className=\"container d-flex flex-column justify-content-center align-items-center\">\n            {children}\n        </div>\n    );\n};\n\nexport default Layout;\n","import React from \"react\";\nimport Button from \"./Button\";\n\nconst NextBack = (props) => {\n    const { showThis, showNext, showBack, validation } = props;\n\n    const next = () => {\n        if (validation().error) {\n            alert(validation().error);\n            return;\n        }\n        showThis(false);\n        showNext(true);\n    };\n\n    const back = () => {\n        showThis(false);\n        showBack(true);\n    };\n\n    return (\n        <div className=\"col-12\">\n            <div className=\"row justify-content-center\">\n                <div className=\"col-3 d-flex justify-content-center\">\n                    <Button onClick={back}>Back</Button>\n                </div>\n                <div className=\"col-3 d-flex justify-content-center\">\n                    <Button onClick={next}>Next</Button>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default NextBack;\n","import React, { useEffect, useState } from \"react\";\nimport NextBack from \"./NextBack\";\n\nconst SelectNumbers = (props) => {\n    const {\n        winningNumbers,\n        setWinningNumbers,\n        additionalNumber,\n        setAdditionalNumber,\n        showBack,\n        showNext,\n        showThis,\n    } = props;\n\n    const [winningNumbersComplete, setWinningNumbersComplete] = useState(false);\n\n    // Create numbers from 1 to 49 in an array\n    const allNumbers = [];\n    for (var i = 1; i < 50; i++) {\n        allNumbers.push(i);\n    }\n\n    useEffect(() => {\n        if (winningNumbers.length === 6) {\n            setWinningNumbersComplete(true);\n        } else {\n            setWinningNumbersComplete(false);\n        }\n    }, [winningNumbers]);\n\n    const selectNumber = (number, e) => {\n        var winningNumbersCopy = [...winningNumbers];\n\n        // Checks if the number is already selected\n        for (var i = 0; i < winningNumbersCopy.length; i++) {\n            // If the number is selected, this action unselects it\n            if (winningNumbersCopy[i] === number) {\n                winningNumbersCopy.splice(i, 1);\n                setWinningNumbers(winningNumbersCopy);\n\n                e.currentTarget.classList.toggle(\"selected\");\n                return;\n            } else if (\n                additionalNumber.length === 1 &&\n                additionalNumber[0] === number\n            ) {\n                setAdditionalNumber([]);\n                e.currentTarget.classList.toggle(\"selected-additional\");\n                return;\n            }\n        }\n\n        // Otherwise select the number\n        if (!winningNumbersComplete) {\n            console.log(\"this runs\");\n            e.currentTarget.classList.toggle(\"selected\");\n            setWinningNumbers([...winningNumbers, number]);\n        } else {\n            console.log(\"this ran\");\n            e.currentTarget.classList.toggle(\"selected-additional\");\n            setAdditionalNumber([number]);\n        }\n    };\n\n    const validation = () => {\n        if (winningNumbersComplete && additionalNumber.length === 0) {\n            return { error: \"Please select 1 additional number\" };\n        } else if (!winningNumbersComplete) {\n            return { error: \"Please select 6 winning numbers\" };\n        } else {\n            return {};\n        }\n    };\n\n    const displayText = () => {\n        if (!winningNumbersComplete) {\n            return \"Select 6 Winning Numbers\";\n        } else if (additionalNumber.length === 0) {\n            return \"Select 1 Additional Number\";\n        } else {\n            return \"Click next to continue\";\n        }\n    };\n\n    return (\n        <div className=\"row my-3 justify-content-center\">\n            <div className=\"col-12 text-center\">\n                <h6>{displayText()}</h6>\n            </div>\n            <div className=\"col-12 col-md-8\">\n                <div className=\"row\">\n                    {allNumbers.map((number) => {\n                        // Highlight the selected numbers\n                        const selected = winningNumbers.includes(number);\n                        const selectedAdditional = additionalNumber.includes(\n                            number\n                        );\n\n                        return (\n                            <div\n                                key={number}\n                                className={`col-2 p-2 number d-flex justify-content-center ${\n                                    selected && \"selected\"\n                                } ${\n                                    selectedAdditional && \"selected-additional\"\n                                }`}\n                                onClick={(e) => selectNumber(number, e)}\n                            >\n                                {number}\n                            </div>\n                        );\n                    })}\n                </div>\n            </div>\n            <NextBack\n                showThis={showThis}\n                showNext={showNext}\n                showBack={showBack}\n                validation={validation}\n            />\n        </div>\n    );\n};\n\nexport default SelectNumbers;\n","import React from \"react\";\nimport NextBack from \"./NextBack\";\n\nconst SetJackpot = (props) => {\n    const { jackpot, setJackpot, showThis, showNext, showBack } = props;\n\n    const handleInputChange = (event) => {\n        const re = /^[0-9\\b]+$/;\n        if (event.target.value === \"\" || re.test(event.target.value)) {\n            setJackpot(event.target.value);\n        }\n    };\n\n    const validation = () => {\n        if (!jackpot) {\n            return { error: \"Please do not leave this blank\" };\n        } else if (!Number.isInteger(parseInt(jackpot))) {\n            return { error: \"Only numbers are allowed\" };\n        } else {\n            return {};\n        }\n    };\n\n    return (\n        <div className=\"row my-3 justify-content-center\">\n            <div className=\"col-12 text-center\">\n                <h6>Enter the Group 1 jackpot for today</h6>\n            </div>\n            <div className=\"col-10\">\n                <div className=\"input-group mb-3\">\n                    <span className=\"input-group-text rounded-0\">$</span>\n                    <input\n                        type=\"text\"\n                        className=\"form-control rounded-0\"\n                        aria-label=\"Amount (to the nearest dollar)\"\n                        value={jackpot}\n                        onChange={handleInputChange}\n                    />\n                </div>\n            </div>\n            <NextBack\n                showThis={showThis}\n                showNext={showNext}\n                showBack={showBack}\n                validation={validation}\n            />\n        </div>\n    );\n};\n\nexport default SetJackpot;\n","import React, { useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { CSSTransition } from \"react-transition-group\";\nimport Intro from \"../components/Intro\";\nimport Layout from \"../components/Layout\";\nimport SelectNumbers from \"../components/SelectNumbers\";\nimport SetJackpot from \"../components/SetJackpot\";\n\nconst Home = () => {\n    //States to control rendering of components\n    const [showIntro, setShowIntro] = useState(true);\n    const [showSelectNumbers, setShowSelectNumbers] = useState(false);\n    const [showSetJackpot, setShowSetJackpot] = useState(false);\n    const [showSimulation, setShowSimulation] = useState(false);\n\n    const [winningNumbers, setWinningNumbers] = useState([]);\n    const [additionalNumber, setAdditionalNumber] = useState([]);\n    const [jackpot, setJackpot] = useState(\"\");\n\n    const timeout = 1000;\n\n    return (\n        <Layout>\n            <CSSTransition\n                in={showIntro}\n                appear={true}\n                timeout={{\n                    appear: 1000,\n                    enter: 1000,\n                    exit: 0,\n                }}\n                mountOnEnter\n                unmountOnExit\n                classNames=\"transition\"\n            >\n                <Intro setShowSelectWinning={setShowSelectNumbers} />\n            </CSSTransition>\n            <CSSTransition\n                in={showSelectNumbers}\n                timeout={{\n                    appear: timeout,\n                    enter: timeout,\n                    exit: 0,\n                }}\n                mountOnEnter\n                unmountOnExit\n                classNames=\"transition\"\n                onEnter={() => setShowIntro(false)}\n            >\n                <SelectNumbers\n                    title=\"Winning Numbers\"\n                    winningNumbers={winningNumbers}\n                    setWinningNumbers={setWinningNumbers}\n                    additionalNumber={additionalNumber}\n                    setAdditionalNumber={setAdditionalNumber}\n                    maxSelection={6}\n                    showNext={setShowSetJackpot}\n                    showBack={setShowIntro}\n                    showThis={setShowSelectNumbers}\n                />\n            </CSSTransition>\n            <CSSTransition\n                in={showSetJackpot}\n                timeout={{\n                    appear: timeout,\n                    enter: timeout,\n                    exit: 0,\n                }}\n                mountOnEnter\n                unmountOnExit\n                classNames=\"transition\"\n            >\n                <SetJackpot\n                    jackpot={jackpot}\n                    setJackpot={setJackpot}\n                    showThis={setShowSetJackpot}\n                    showBack={setShowSelectNumbers}\n                    showNext={setShowSimulation}\n                />\n            </CSSTransition>\n            <CSSTransition\n                in={showSimulation}\n                timeout={{\n                    appear: timeout,\n                    enter: timeout,\n                    exit: 0,\n                }}\n                mountOnEnter\n                unmountOnExit\n                classNames=\"transition\"\n            >\n                <Redirect\n                    push\n                    to={{\n                        pathname: \"/simulation\",\n                        search: createQueryString(\n                            winningNumbers,\n                            additionalNumber,\n                            jackpot\n                        ),\n                    }}\n                />\n            </CSSTransition>\n        </Layout>\n    );\n};\n\nconst createQueryString = (numbers, addNum, jackpot) => {\n    var query = \"?\";\n\n    // Iterate through winning numbers\n    numbers.forEach((number, index) => {\n        query = query.concat(`num${index}=${number}&`);\n    });\n\n    // Concat the additional number and jackpot\n    query = query.concat(`addNum=${addNum}&jackpot=${jackpot}`);\n\n    // Return queryString\n    return query;\n};\n\nexport default Home;\n","import React from \"react\";\n\nconst AdditionalNumber = (props) => {\n    const { additionalNumber } = props;\n    return (\n        <div className=\"row mt-3\">\n            <div className=\"col-12 grey-table\">\n                <p className=\"my-0 text-center p-2\">Additional Number</p>\n            </div>\n            <div className=\"col-12 light-grey-table\">\n                <p className=\"text-center my-0 py-2\">{additionalNumber}</p>\n            </div>\n        </div>\n    );\n};\n\nexport default AdditionalNumber;\n","export default function numberWithCommas(x) {\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}\n","import React from \"react\";\nimport numberWithCommas from \"../utils/numberWithCommas\";\n\nconst GroupOnePrize = (props) => {\n    const { jackpot } = props;\n\n    return (\n        <div className=\"row mt-3\">\n            <div className=\"col-12 grey-table\">\n                <p className=\"my-0 text-center p-2\">Group 1 Prize</p>\n            </div>\n            <div className=\"col-12 light-grey-table\">\n                <p className=\"text-center my-0 py-2\">\n                    ${numberWithCommas(jackpot)}\n                </p>\n            </div>\n        </div>\n    );\n};\n\nexport default GroupOnePrize;\n","export default __webpack_public_path__ + \"static/media/toto.1a58eb76.png\";","import React from \"react\";\nimport totoLogo from \"../static/img/toto.png\";\nimport numberWithCommas from \"../utils/numberWithCommas\";\n\nconst NextDraw = (props) => {\n    const { jackpot } = props;\n\n    const datetime = new Date(Date.now());\n\n    return (\n        <div className=\"col-12\">\n            <div className=\"row\">\n                <div className=\"col-3 d-flex justify-content-center align-items-center\">\n                    <img src={totoLogo} alt=\"Toto Logo\" className=\"img-fluid\" />\n                </div>\n                <div className=\"col-9\">\n                    <div className=\"row align-items-center h-100\">\n                        <div className=\"col-5 d-flex flex-column justify-content-center py-3\">\n                            <p className=\"my-0\">Next Jackpot</p>\n                            <p className=\"my-0\">Next Draw</p>\n                        </div>\n                        <div className=\"col-7 d-flex flex-column justify-content-center py-3\">\n                            <p className=\"my-0\">\n                                ${numberWithCommas(jackpot)} est\n                            </p>\n                            <p className=\"my-0\"> {datetime.toDateString()}</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default NextDraw;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Button from \"./Button\";\n\nconst ReturnHome = (props) => {\n    return (\n        <div className=\"col-5 d-flex justify-content-center\">\n            <Button>\n                <Link to=\"/\">Back</Link>\n            </Button>\n        </div>\n    );\n};\n\nexport default ReturnHome;\n","import React from \"react\";\n\nconst TableHeader = () => {\n    const datetime = new Date(Date.now());\n\n    return (\n        <div className=\"row\">\n            <div className=\"col-6 table-header border border-end border-white\">\n                <p className=\"text-center text-white my-0 py-2\">\n                    {datetime.toDateString()}\n                </p>\n            </div>\n            <div className=\"col-6 table-header border border-start border-white\">\n                <p className=\"text-center text-white my-0 py-2\">\n                    Draw No. 3888\n                </p>\n            </div>\n        </div>\n    );\n};\n\nexport default TableHeader;\n","import React, { useEffect, useState } from \"react\";\n\nconst WinningNumbers = (props) => {\n    const { winningNumbers } = props;\n\n    const [displayNumbers, setDisplayNumbers] = useState([winningNumbers[0]]);\n    const [currentIndex, setCurrentIndex] = useState(0);\n\n    useEffect(() => {\n        console.log(\"useffect ran\");\n\n        const timeout = setTimeout(() => {\n            if (currentIndex < winningNumbers.length - 1) {\n                setDisplayNumbers([\n                    ...displayNumbers,\n                    winningNumbers[currentIndex + 1],\n                ]);\n                setCurrentIndex(currentIndex + 1);\n            }\n        }, 5000);\n\n        return () => {\n            clearTimeout(timeout);\n            console.log(\"clear useeffect ran\");\n        };\n    }, [winningNumbers, displayNumbers, currentIndex]);\n\n    return (\n        <div className=\"row mt-3\">\n            <div className=\"col-12 grey-table\">\n                <p className=\"my-0 text-center p-2\">Winning Numbers</p>\n            </div>\n            {displayNumbers.map((number) => {\n                return <Number number={number} key={number} />;\n            })}\n        </div>\n    );\n};\n\nconst Number = ({ number }) => {\n    const [display, setDisplay] = useState(0);\n\n    useEffect(() => {\n        const interval = setInterval(() => {\n            setDisplay(randomNumber());\n        }, 30);\n\n        const timeout = setTimeout(() => {\n            clearInterval(interval);\n            setDisplay(number);\n        }, 5000);\n\n        return () => {\n            clearTimeout(timeout);\n        };\n    }, [number]);\n\n    const randomNumber = () => {\n        return Math.floor(Math.random() * 50);\n    };\n\n    return (\n        <div className=\"col-2 light-grey-table\">\n            <p className=\"text-center my-0 py-2\">{display}</p>\n        </div>\n    );\n};\n\nexport default WinningNumbers;\n","import React from \"react\";\nimport numberWithCommas from \"../utils/numberWithCommas\";\n\nconst WinningShares = (props) => {\n    const { jackpot } = props;\n\n    const winningShares = [\n        {\n            group: 1,\n            shareAmount: jackpot,\n            shares: 1,\n        },\n        {\n            group: 2,\n            shareAmount: 188888,\n            shares: 8,\n        },\n        {\n            group: 3,\n            shareAmount: 1388,\n            shares: 568,\n        },\n        {\n            group: 4,\n            shareAmount: 388,\n            shares: 1288,\n        },\n        {\n            group: 5,\n            shareAmount: 50,\n            shares: 30888,\n        },\n        {\n            group: 6,\n            shareAmount: 25,\n            shares: 33688,\n        },\n        {\n            group: 7,\n            shareAmount: 10,\n            shares: 588888,\n        },\n    ];\n\n    return (\n        <div className=\"row mt-3\">\n            <div className=\"col-12 p-0\">\n                <table className=\"table table-bordered text-center\">\n                    <thead className=\"grey-table\">\n                        <tr>\n                            <th colSpan={3}>Winning Shares</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <th>Prize Group</th>\n                            <th>Share Amount</th>\n                            <th>No. of Winning Shares</th>\n                        </tr>\n                        {winningShares.map((share) => {\n                            return (\n                                <tr key={share.group}>\n                                    <td>Group {share.group}</td>\n                                    <td>\n                                        ${numberWithCommas(share.shareAmount)}\n                                    </td>\n                                    <td>{numberWithCommas(share.shares)}</td>\n                                </tr>\n                            );\n                        })}\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    );\n};\n\nexport default WinningShares;\n","import { useLocation } from \"react-router-dom\";\nimport { CSSTransition } from \"react-transition-group\";\nimport AdditionalNumber from \"../components/AdditionalNumber\";\nimport GroupOnePrize from \"../components/GroupOnePrize\";\nimport Layout from \"../components/Layout\";\nimport NextDraw from \"../components/NextDraw\";\nimport ReturnHome from \"../components/ReturnHome\";\nimport Row from \"../components/Row\";\nimport TableHeader from \"../components/TableHeader\";\nimport WinningNumbers from \"../components/WinningNumbers\";\nimport WinningShares from \"../components/WinningShares\";\n\n// A custom hook that builds on useLocation to parse\n// the query string for you.\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n}\n\nconst Simulation = () => {\n    const query = useQuery();\n\n    // Get data from winning string\n    const winningNumbers = [];\n    for (var i = 0; i < 6; i++) {\n        winningNumbers.push(query.get(`num${i}`));\n    }\n    const additionalNumber = [query.get(\"addNum\")];\n    const jackpot = query.get(\"jackpot\");\n\n    return (\n        <CSSTransition\n            in={true}\n            appear={true}\n            timeout={{\n                appear: 1000,\n                enter: 1000,\n                exit: 0,\n            }}\n            mountOnEnter\n            unmountOnExit\n            classNames=\"transition\"\n        >\n            <Layout>\n                <Row>\n                    <div className=\"col-12 col-md-6\">\n                        <div className=\"row justify-content-center\">\n                            <NextDraw jackpot={jackpot} />\n\n                            <div className=\"col-10\">\n                                <TableHeader />\n                                <WinningNumbers\n                                    winningNumbers={winningNumbers}\n                                />\n                                <AdditionalNumber\n                                    additionalNumber={additionalNumber}\n                                />\n                                <GroupOnePrize jackpot={jackpot} />\n                                <WinningShares jackpot={jackpot} />\n                            </div>\n                        </div>\n                    </div>\n                </Row>\n                <Row>\n                    <ReturnHome />\n                </Row>\n            </Layout>\n        </CSSTransition>\n    );\n};\n\nexport default Simulation;\n","import React, { useEffect } from \"react\";\nimport {\n    HashRouter as Router,\n    Switch,\n    Route,\n    useLocation,\n} from \"react-router-dom\";\nimport styles from \"./App.css\";\nimport Home from \"./pages/Home\";\nimport Simulation from \"./pages/Simulation\";\n\nconst App = () => {\n    return (\n        <Router>\n            <ScrollToTop />\n            <Switch>\n                <Route exact path=\"/\">\n                    <Home />\n                </Route>\n                <Route path=\"/simulation\">\n                    <Simulation />\n                </Route>\n            </Switch>\n        </Router>\n    );\n};\n\nfunction ScrollToTop() {\n    const { pathname } = useLocation();\n\n    useEffect(() => {\n        window.scrollTo(0, 0);\n    }, [pathname]);\n\n    return null;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}